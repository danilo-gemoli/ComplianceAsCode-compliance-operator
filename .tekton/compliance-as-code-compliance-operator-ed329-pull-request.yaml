apiVersion: tekton.dev/v1
kind: PipelineRun

metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/danilo-gemoli/ComplianceAsCode-compliance-operator?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "master"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: foobar
    appstudio.openshift.io/component: compliance-as-code-compliance-operator-ed329
    pipelines.appstudio.openshift.io/type: build
  name: compliance-as-code-compliance-operator-ed329-on-pull-request
  namespace: testplatform-ci-tenant

spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: image-expires-after
    value: 3d
  - name: build-platforms
    value:
    - linux/x86_64
  - name: prefetch-compliance-operator-input
    value: '{"type": "rpm", "path": "images/operator/"}'
  - name: prefetch-testopenscap-input
    value: '{"type": "rpm", "path": "images/openscap/"}'
  - name: hermetic
    value: "true"
  - name: output-image
    value: quay.io/redhat-user-workloads-stage/testplatform-ci-tenant/compliance-as-code-compliance-operator-ed329:compliance-operator-on-pr-{{revision}}
  - name: compliance-operator-image
    value: quay.io/redhat-user-workloads-stage/testplatform-ci-tenant/compliance-as-code-compliance-operator-ed329:compliance-operator-on-pr-{{revision}}
  - name: testcontent-image
    value: quay.io/redhat-user-workloads-stage/testplatform-ci-tenant/compliance-as-code-compliance-operator-ed329:testcontent-on-pr-{{revision}}
  - name: testopenscap-image
    value: quay.io/redhat-user-workloads-stage/testplatform-ci-tenant/compliance-as-code-compliance-operator-ed329:testopenscap-on-pr-{{revision}}

  pipelineSpec:
    description: Run the AWS Serial e2e test

    params:
    - name: skip-checks
      default: "false"
      description: Skip checks against built image
      type: string
    - name: rebuild
      default: "false"
      description: Force rebuild image
      type: string
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
      type: string
    - default:
      - linux/x86_64
      description: List of platforms to build the container images on. The available set of values is determined by the configuration of the multi-platform-controller.
      name: build-platforms
      type: array
    - default: ""
      description: Build compliance-operator dependencies to be prefetched by Cachi2
      name: prefetch-compliance-operator-input
      type: string
    - default: ""
      description: Build testopenscap dependencies to be prefetched by Cachi2
      name: prefetch-testopenscap-input
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - description: hold the source code and build deps
      name: output-image
      type: string
    - description: compliance-operator output image
      name: compliance-operator-image
      type: string
    - description: testcontent output image
      name: testcontent-image
      type: string
    - description: testopenscap output image
      name: testopenscap-image
      type: string

    tasks:
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:08e18a4dc5f947c1d20e8353a19d013144bea87b72f67236b165dd4778523951
        - name: kind
          value: task
        resolver: bundles
    
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      - name: ociStorage
        value: $(params.output-image).git
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:d35e5d501cb5f5f88369511f76249857cb5ac30250e1dcf086939321964ff6b9
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
    
    - name: prefetch-compliance-operator-dependencies
      params:
      - name: input
        value: $(params.prefetch-compliance-operator-input)
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      - name: ociStorage
        value: $(params.output-image).prefetch
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      - name: dev-package-managers
        value: "true"
      runAfter:
      - clone-repository
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:f10a4841e6f75fbb314b1d8cbf14f652499c1fe7f59e59aed59f7431c680aa17
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: git-basic-auth
        workspace: git-auth
      - name: netrc
        workspace: netrc
    
    - name: prefetch-testopenscap-dependencies
      params:
      - name: input
        value: $(params.prefetch-testopenscap-input)
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      - name: ociStorage
        value: $(params.output-image).prefetch
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      - name: dev-package-managers
        value: "true"
      runAfter:
      - clone-repository
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:f10a4841e6f75fbb314b1d8cbf14f652499c1fe7f59e59aed59f7431c680aa17
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: git-basic-auth
        workspace: git-auth
      - name: netrc
        workspace: netrc

    - name: build-compliance-operator-image
      matrix:
        params:
        - name: PLATFORM
          value:
          - $(params.build-platforms)
      params:
      - name: IMAGE
        value: $(params.compliance-operator-image)
      - name: DOCKERFILE
        value: images/operator/Dockerfile
      - name: CONTEXT
        value: "."
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-compliance-operator-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-compliance-operator-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-compliance-operator-dependencies.results.CACHI2_ARTIFACT)
      - name: IMAGE_APPEND_PLATFORM
        value: "true"
      runAfter:
      - prefetch-compliance-operator-dependencies
      taskRef:
        params:
        - name: name
          value: buildah-remote-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta:0.4@sha256:5b8d51fa889cdac873750904c3fccc0cca1c4f65af16902ebb2b573151f80657
        - name: kind
          value: task
        resolver: bundles

    - name: build-testcontent-image
      matrix:
        params:
        - name: PLATFORM
          value:
          - $(params.build-platforms)
      params:
      - name: IMAGE
        value: $(params.testcontent-image)
      - name: DOCKERFILE
        value: images/testcontent/Dockerfile.ci
      - name: CONTEXT
        value: "."
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-compliance-operator-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-compliance-operator-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-compliance-operator-dependencies.results.CACHI2_ARTIFACT)
      - name: IMAGE_APPEND_PLATFORM
        value: "true"
      runAfter:
      - prefetch-compliance-operator-dependencies
      taskRef:
        params:
        - name: name
          value: buildah-remote-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta:0.4@sha256:5b8d51fa889cdac873750904c3fccc0cca1c4f65af16902ebb2b573151f80657
        - name: kind
          value: task
        resolver: bundles

    - name: build-testopenscap-image
      matrix:
        params:
        - name: PLATFORM
          value:
          - $(params.build-platforms)
      params:
      - name: IMAGE
        value: $(params.testopenscap-image)
      - name: DOCKERFILE
        value: images/openscap/Containerfile
      - name: CONTEXT
        value: "."
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-testopenscap-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-testopenscap-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-testopenscap-dependencies.results.CACHI2_ARTIFACT)
      - name: IMAGE_APPEND_PLATFORM
        value: "true"
      runAfter:
      - prefetch-testopenscap-dependencies
      taskRef:
        params:
        - name: name
          value: buildah-remote-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta:0.4@sha256:5b8d51fa889cdac873750904c3fccc0cca1c4f65af16902ebb2b573151f80657
        - name: kind
          value: task
        resolver: bundles

    - name: build-testopenscap-image-index
      params:
      - name: IMAGE
        value: $(params.testopenscap-image)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: ALWAYS_BUILD_INDEX
        value: "true"
      - name: IMAGES
        value:
        - $(tasks.build-testopenscap-image.results.IMAGE_REF[*])
      runAfter:
      - build-testopenscap-image
      taskRef:
        params:
        - name: name
          value: build-image-index
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:846dc9975914f31380ec2712fdbac9df3b06c00a9cc7df678315a7f97145efc2
        - name: kind
          value: task
        resolver: bundles

    # - name: provision-ephemeral-cluster
    #   params:
    #   - name: workflow
    #     value: ipi-aws
    #   - name: clusterProfile
    #     value: aws-3
    #   - name: releases
    #     value: '{"initial":{"integration":{"name":"4.17","namespace":"ocp"}},"latest":{"integration":{"include_built_images":true,"name":"4.17","namespace":"ocp"}}}'
    #   - name: ownerName
    #     value: $(context.pipelineRun.name)
    #   - name: ownerUid
    #     value: $(context.pipelineRun.uid)
    #   runAfter:
    #   - build-compliance-operator-image
    #   - build-testcontent-image
    #   - build-testopenscap-image-index
    #   taskRef:
    #     resolver: git
    #     params:
    #     - name: url
    #       value: https://github.com/danilo-gemoli/openshift-konflux-tasks
    #     - name: revision
    #       value: fix/provision-ephemeral-cluster
    #     - name: pathInRepo
    #       value: tasks/provision-ephemeral-cluster/0.1/provision-ephemeral-cluster.yaml

    - name: run-test
      runAfter:
      # - provision-ephemeral-cluster
      - build-compliance-operator-image
      - build-testcontent-image
      - build-testopenscap-image-index
      params:
      - name: source_artifact
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      # - name: kubeconfigSecretRef
      #   value: $(tasks.provision-ephemeral-cluster.results.secretRef)
      - name: imageFromCI
        value: $(tasks.build-compliance-operator-image.results.IMAGE_URL[*])
      - name: contentImageFromCI
        value: $(tasks.build-testcontent-image.results.IMAGE_URL[*])
      - name: openscapImageFromCI
        value: $(tasks.build-testopenscap-image-index.results.IMAGE_URL)
      taskSpec:
        params:
        # - name: kubeconfigSecretRef
        #   type: string
        #   description: "The secret that holds the Ephemeral Cluster kubeconfig"
        - default: ca-bundle.crt
          description: The name of the key in the ConfigMap that contains the CA bundle data.
          name: caTrustConfigMapKey
          type: string
        - default: trusted-ca
          description: The name of the ConfigMap to read CA bundle data from.
          name: caTrustConfigMapName
          type: string
        - name: imageFromCI
          type: array
        - name: contentImageFromCI
          type: array
        - name: openscapImageFromCI
          type: string

        stepTemplate:
          volumeMounts:
          - mountPath: /var/workdir
            name: workdir

        steps:
        - name: use-trusted-artifact
          args:
          - use
          - $(params.source_artifact)=/var/workdir/source
          computeResources: {}
          image: quay.io/konflux-ci/build-trusted-artifacts:latest@sha256:4689f88dd253bd1feebf57f1a76a5a751880f739000719cd662bbdc76990a7fd
          volumeMounts:
          - mountPath: /etc/pki/tls/certs/ca-custom-bundle.crt
            name: trusted-ca
            readOnly: true
            subPath: ca-bundle.crt

        - name: run-test
          image: registry.redhat.io/ubi9/go-toolset@sha256:3ce6311380d5180599a3016031a9112542d43715244816d1d0eabc937952667b
          env:
          # - name: KUBECONFIG_VALUE
          #   valueFrom:
          #     secretKeyRef:
          #       name: $(params.kubeconfigSecretRef)
          #       key: kubeconfig
          - name: IMAGE_FROM_CI
            value: $(params.imageFromCI[0])
          - name: CONTENT_IMAGE_FROM_CI
            value: $(params.contentImageFromCI[0])
          - name: OPENSCAP_IMAGE_FROM_CI
            value: $(params.openscapImageFromCI)
          script: |
            #!/usr/bin/env bash
            set -eo pipefail

            echo "IMAGE_FROM_CI: $IMAGE_FROM_CI"
            echo "CONTENT_IMAGE_FROM_CI: $CONTENT_IMAGE_FROM_CI"
            echo "OPENSCAP_IMAGE_FROM_CI: $OPENSCAP_IMAGE_FROM_CI"
            echo "---"

            # # Setup the ephemeral cluster kubeconfig
            # KUBECONFIG="$(mktemp --tmpdir=/tmp kubeconfig.XXXXX)"
            # trap 'rm -f "$KUBECONFIG"' EXIT

            # echo "$KUBECONFIG_VALUE" >"$KUBECONFIG"
            # export KUBECONFIG

            # Download oc and make it available
            curl -LO 'https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.17.36/openshift-client-linux-amd64-rhel9.tar.gz'
            oc_bins="$(mktemp --tmpdir=/tmp -d oc-bins.XXXXX)"
            tar -xzf openshift-client-linux-amd64-rhel9.tar.gz -C "$oc_bins"
            export PATH="${oc_bins}:$PATH"

            ls -l /tmp
            cp -R /var/workdir/source/ /tmp/

            # Run the test
            cd /tmp/source
            make e2e-serial
          workingDir: /var/workdir

        volumes:
        - configMap:
            items:
            - key: $(params.caTrustConfigMapKey)
              path: ca-bundle.crt
            name: $(params.caTrustConfigMapName)
            optional: true
          name: trusted-ca
        - emptyDir: {}
          name: workdir

    # finally:
    # - name: deprovision-ephemeral-cluster
    #   taskRef:
    #     resolver: git
    #     params:
    #     - name: url
    #       value: https://github.com/openshift/konflux-tasks
    #     - name: revision
    #       value: main
    #     - name: pathInRepo
    #       value: tasks/deprovision-ephemeral-cluster/0.1/deprovision-ephemeral-cluster.yaml
    #   params:
    #   - name: testPlatformClusterClaimName
    #     value: $(tasks.provision-ephemeral-cluster.results.testPlatformClusterClaimName)
    #   - name: testPlatformClusterClaimNamespace
    #     value: $(tasks.provision-ephemeral-cluster.results.testPlatformClusterClaimNamespace)

    workspaces:
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  
  taskRunTemplate:
    serviceAccountName: build-pipeline-compliance-as-code-compliance-operator-ed329
  
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'

  timeout: 6h

status: {}
